name: CI/CD

on:
  push:
    branches: [ main ]
  workflow_dispatch: {}

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - run: pip install --upgrade pip && pip install -r app/requirements.txt

      - run: echo "No tests yet, skipping..."

      - run: docker build -t python-ci-cd-k8s:latest .

      - uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - run: |
          docker tag python-ci-cd-k8s:latest ghcr.io/${{ github.repository_owner }}/python-ci-cd-k8s:latest
          docker push ghcr.io/${{ github.repository_owner }}/python-ci-cd-k8s:latest

  deploy:
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: azure/setup-kubectl@v3
        with:
          version: '1.30.0'

      - env:
          KUBECONFIG_DATA: ${{ secrets.KUBECONFIG }}
        run: |
          echo "$KUBECONFIG_DATA" > kubeconfig
          export KUBECONFIG=$PWD/kubeconfig

      - run: |
          kubectl apply -f k8s/namespace.yaml
          kubectl apply -f k8s/deployment.yaml
          kubectl apply -f k8s/service.yaml
          kubectl apply -f k8s/ingress.yaml || echo "No ingress applied"

      - run: |
          kubectl rollout status deployment/weather-time-api -n python-ci-cd-k8s --timeout=120s
